//1. Escreva uma função que calcula o número fatorial de um número. Tente
implementar a versão iterativa também.//

-----------FATORIAL---------------

int fatorial (int n){
    if (n==1 || n==0)
    return 1;
    
    else
    return n * fatorial (n-1);
}

int main () {
    int numeroNormal;
    printf("Digite um valor inteiro para saber seu fatorial: ");
    scanf("%d", &numeroNormal);
    
   int numeroFatorial = fatorial (numeroNormal);
    
    printf("O fatorial do número é: %d", numeroFatorial);

  return 0;
        
}
---------------ITERATIVA--------------------

int fatorial (int n) {
int fat = 1;
for (int i = n; i >= 1; i-- ) {
    fat = fat * i;
}
    
    return fat;
}

int main (){
    int numero;
    
    printf("Digite um número para eu lhe devolver seu fatorial");
    scanf("%d", &numero);
 
    int numFatorial = fatorial (numero);
    
    printf("O fatorial de %d é %d",numero, numFatorial);
     
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//2. Escreva uma função recursiva que calcula a potência de um número inteiro x
elevado a um número inteiro y.

int eleva (int x, int y) {
 if (y == 0)
    return 1;
 else
    return eleva (x,  y - 1) * x;
}
    
int main (){
    int base;
    int expoente;
    
    printf("Vamos calcular uma potência! Digite uma base inteira:");
    scanf("%d", &base);
    printf("Digite o expoente inteiro:");
    scanf("%d", &expoente);
  
    int potencia = eleva (base, expoente);
    
    printf("A potência de %d elevado a %d é: %d", base, expoente, potencia);
    return 0;
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//3. Escreva uma função recursiva que recebe um array de inteiros e retorna a
soma dos elementos do array.

int soma (int v[], int n) {
 if (n == 1)
    return v[0];
 else
    return v[n - 1] + soma(v, n - 1);
}
    
int main (){
    int posicoes;
    
    printf("Você quer criar um array de quantas posições?:");
    scanf("%d", &posicoes);
    int array [posicoes];
    
    for (int i = 0; i < posicoes; i++) {
        printf("Digite um valor para o array:");
        scanf("%d", &array[i]);
    }
  
    int somaArray = soma (array, posicoes);
    
    printf("A soma dos arrays é: %d", somaArray);
    return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//4. Escreva uma função recursiva que recebe um array de inteiros e retorna o
produto dos elementos do array.

#include<stdio.h>
#include<time.h>
#include<stdlib.h>

int multiplica (int v[], int n) {
    if (n==0)
    return 1;
    
    int ultimoElem = v [n-1];
    return ultimoElem * multiplica (v, n-1);
    
}
int main()
{
    srand(time(NULL));
    int v[10];
    
    for (int i = 0; i <= 9; i++) {
        v[i] = rand () % 10 + 1;
    }
 
 int multiplicadoV = multiplica (v, 10);
 
 printf("Os valores sorteados foram: \n");
 for (int i = 0; i <= 9; i++) {
    printf("%d ", v[i]);
 }

 printf ("\nO produto de todos os valores sorteados é: %d", multiplicadoV);

    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------
//5. Escreva a função para cálculo do n-ésimo termo da sequência de Collatz
utilizando recursividade.

int collatz (int n, int p) {
    if (p==1)
    return n;
    
    if (n % 2 == 0)
    return collatz (n/2, p - 1);
    
    else
    return collatz (3*n + 1, p - 1);
    
}

int main (){
    int numero, posicao;
    printf ("Digite um valor para aplicarmos a sequência de Collatz: ");
    scanf ("%d", &numero);
    printf ("Digite agora uma posição da sequência gerada para ver o valor: ");
    scanf ("%d", &posicao);
    
    int seqCollatz = collatz (numero, posicao);
    
    printf ("o valor da posição %d na sequência de Collatz de %d é: %d", posicao, numero, seqCollatz);
}

-----------------------------------------------------------------------------------------------------------------------------------------

6. Escreva uma função recursiva que determine quantas vezes um dígito K ocorre
em um número natural N. Por exemplo, o dígito 2 ocorre 3 vezes em
762021192.
